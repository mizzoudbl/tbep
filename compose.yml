name: tbep
services:
  neo4j:
    image: neo4j:5.20-enterprise
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_memory_transaction_total_max=0
      - NEO4J_dbms_security_procedures_unrestricted=gds*
      # Volumnes to be used need to be customized accordingly, this is just for myself
    volumes:
      - ./scripts:/var/lib/neo4j/import/
      - ../neo4j/data:/var/lib/neo4j/data
      - ./plugins:/var/lib/neo4j/plugins

  frontend-dev:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        BASIC_AUTH_USERNAME: ${BASIC_AUTH_USERNAME}
        BASIC_AUTH_PASSWORD: ${BASIC_AUTH_PASSWORD}
    image: bhupesh42/tbep-frontend:pdnet-saipuram-com
    container_name: frontend
    env_file:
      - frontend/.env
    ports:
      - "3000:80"
    profiles: ["dev"]

  frontend:
    image: bhupesh42/tbep-frontend:pdnet-saipuram-com
    container_name: frontend
    ports:
      - "3000:80"

  gsea:
    build: 
      context: gsea
      dockerfile: Dockerfile
    container_name: gsea
    ports:
      - "5000:5000"
  
  nestjs:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: nestjs
    # Change this if running on local to avoid restarting on failure
    restart: on-failure
    ports:
      - "4000:4000"
    depends_on:
      - neo4j
      - redis
    env_file:
      - backend/.env
  
  redis:
    image: redis:7.4-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-cache:/data

volumes:
  redis-cache: